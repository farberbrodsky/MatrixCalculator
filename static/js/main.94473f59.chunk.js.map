{"version":3,"sources":["MatrixComponent.module.css","matrix.js","MatrixComponent.jsx","App.jsx","index.js","App.module.css"],"names":["module","exports","Real","x","className","this","y","add","neg","mul","toString","Matrix","mat","rows","cols","i","j","colWidth","Array","fill","strLen","getItem","length","result","str","padEnd","other","Zero","Math","min","setItem","val","k","iCut","jCut","resultI","resultJ","rowReduce","ops","res","isZero","op","opposite","pow","minor","det","temp","name","args","swapRowsInplace","addRowInplace","multiplyRowInplace","clone","actions","lastZeroRow","good","push","r","found","rx","isOne","swaps","applyRowOperation","matRows","row","isZeroRow","concat","transpose","n","slice","zero","one","m","rangeInclusive","MatrixComponent","M","matrix","editable","onChange","changeCell","event","parseInt","target","value","nextM","isNaN","changeDim","table","map","el","style","width","bind","styles","leftParentheses","buttonContainer","colAdd","onClick","colSub","rowAdd","rowSub","rowColAdd","rowColSub","rightParentheses","App","useState","M1","setM1","M2","setM2","undefined","setResult","title","twoMatrices","leftMatrix","twoMatricesOperators","inverse","adj","rightMatrix","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94473f59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MatrixComponent\":\"MatrixComponent_MatrixComponent__1C7Q-\",\"leftParentheses\":\"MatrixComponent_leftParentheses__UdVyq\",\"rightParentheses\":\"MatrixComponent_rightParentheses__3Fx7f\",\"columnAdd\":\"MatrixComponent_columnAdd__2OJNx\",\"buttonContainer\":\"MatrixComponent_buttonContainer__2YOMP\",\"colAdd\":\"MatrixComponent_colAdd__2XtXm\",\"colSub\":\"MatrixComponent_colSub__15WGf\",\"rowAdd\":\"MatrixComponent_rowAdd__1KM72\",\"rowSub\":\"MatrixComponent_rowSub__AZXdD\",\"rowColAdd\":\"MatrixComponent_rowColAdd__Ir2HE\",\"rowColSub\":\"MatrixComponent_rowColSub__11gXv\"};","export class Real {\n  className = \"Real\";\n\n  constructor(x) {\n    this.x = x;\n  }\n\n  add(y) {\n    if (y.className === \"Real\") {\n      return new Real(this.x + y.x);\n    } else {\n      return y.add(this);\n    }\n  }\n\n  sub(y) {\n    return this.add(y.neg());\n  }\n\n  mul(y) {\n    if (y.className === \"Real\") {\n      return new Real(this.x * y.x);\n    } else {\n      return y.mul(this);\n    }\n  }\n\n  neg() {\n    return new Real(-this.x);\n  }\n\n  opposite() {\n    return new Real(1 / this.x);\n  }\n\n  toString() {\n    return this.x.toString();\n  }\n\n  isZero() {\n    return this.x === 0;\n  }\n\n  isOne() {\n    return this.x === 1;\n  }\n}\n\nexport function ZnField(n) {\n  return class Zn {\n    className = \"Z\" + n.toString();\n\n    constructor(x) {\n      this.x = x % n;\n    }\n\n    add(y) {\n      if (y.className === this.className) {\n        return new Zn((this.x + y.x) % n);\n      } else if (y.className === \"Real\") {\n        return new Zn((this.x + Math.floor(y.x)) % n);\n      } else {\n        return y.add(this);\n      }\n    }\n\n    sub(y) {\n      return this.add(y.neg());\n    }\n\n    mul(y) {\n      if (y.className === this.className) {\n        return new Zn((this.x * y.x) % n);\n      } else if (y.className === \"Real\") {\n        return new Zn((this.x * Math.floor(y.x)) % n);\n      } else {\n        return y.mul(this);\n      }\n    }\n\n    neg() {\n      return new Zn(n - this.x);\n    }\n\n    opposite() {\n      for (let i = 1; i < n; i++) {\n        if ((this.x * i) % n === 1) {\n          return new Zn(i);\n        }\n      }\n    }\n\n    toString() {\n      return this.x.toString();\n    }\n\n    isZero() {\n      return this.x === 0;\n    }\n\n    isOne() {\n      return this.x === 1;\n    }\n  };\n}\n\nexport class Matrix {\n  className = \"Matrix\";\n\n  constructor(mat, rows, cols) {\n    this.mat = mat;\n    this.rows = rows;\n    this.cols = cols;\n  }\n\n  getItem(i, j) {\n    return this.mat[i - 1 + (j - 1) * this.rows];\n  }\n\n  setItem(i, j, x) {\n    this.mat[i - 1 + (j - 1) * this.rows] = x;\n  }\n\n  toString() {\n    let colWidth = new Array(this.cols).fill(0);\n    for (let i = 1; i <= this.rows; i++) {\n      for (let j = 1; j <= this.cols; j++) {\n        let strLen = this.getItem(i, j).toString().length;\n        if (strLen > colWidth[j]) {\n          colWidth[j] = strLen;\n        }\n      }\n    }\n    let result = \"\";\n    for (let i = 1; i <= this.rows; i++) {\n      for (let j = 1; j <= this.cols; j++) {\n        let str = this.getItem(i, j).toString();\n        str = str.padEnd(colWidth[j], \" \");\n        result += str;\n        if (j !== this.cols) {\n          result += \" \";\n        }\n      }\n      if (i !== this.rows) {\n        result += \"\\n\";\n      }\n    }\n    return result;\n  }\n\n  add(other) {\n    let result = Matrix.Zero(Math.min(this.rows, other.rows), Math.min(this.cols, other.cols));\n    for (let i = 1; i <= result.rows; i++) {\n      for (let j = 1; j <= result.cols; j++) {\n        result.setItem(i, j, this.getItem(i, j).add(other.getItem(i, j)));\n      }\n    }\n    return new Matrix(result, this.rows, this.cols);\n  }\n\n  mul(other) {\n    let result = Matrix.Zero(this.rows, other.cols);\n    for (let i = 1; i <= this.rows; i++) {\n      for (let j = 1; j <= other.cols; j++) {\n        // (AB)_i,j=sum(k=1,n,A_i,k * B_k,j)\n        let val = new Real(0);\n        for (let k = 1; k <= this.cols; k++) {\n          let x = this.getItem(i, k).mul(other.getItem(k, j));\n          val = val.add(x);\n        }\n        result.setItem(i, j, val);\n      }\n    }\n    return result;\n  }\n\n  minor(iCut, jCut) {\n    let mat = Matrix.Zero(this.rows - 1, this.cols - 1);\n    for (let i = 1; i <= this.rows - 1; i++) {\n      for (let j = 1; j <= this.cols - 1; j++) {\n        let resultI = i;\n        if (i >= iCut) {\n          resultI += 1;\n        }\n        let resultJ = j;\n        if (j >= jCut) {\n          resultJ += 1;\n        }\n        mat.setItem(i, j, this.getItem(resultI, resultJ));\n      }\n    }\n    return mat;\n  }\n\n  // detTmurot() {\n  //   if (this.rows != this.cols) {\n  //     return 0;\n  //   }\n  //   const n = this.rows;\n  //   // Get the signed tmurot. e.g. [[1, [0, 1]], [-1, [1, 0]]]\n  //   function getTmurot(n) {\n  //     if (n == 1) {\n  //       return [[1, [0]]];\n  //     }\n  //     let t = getTmurot(n - 1);\n  //     let result = [];\n  //     for (let tx of t) {\n  //       result.push([tx[0], tx[1].concat([n - 1])]);\n  //       for (let i = 0; i < (n - 1); i++) {\n  //         let new_tmura = tx[1].slice();\n  //         let temp = new_tmura[i];\n  //         new_tmura[i] = n - 1;\n  //         new_tmura.push(temp);\n  //         result.push([-tx[0], new_tmura]);\n  //       }\n  //     }\n  //     return result;\n  //   }\n\n  //   let tmurot = getTmurot(n);\n  //   let result = new Real(0);\n  //   for (let [sign, tmura] of tmurot) {\n  //     let x = new Real(sign);\n  //     for (let i = 1; i <= n; i++) {\n  //       x = x.mul(this.getItem(i, tmura[i - 1] + 1));\n  //     }\n  //     result = result.add(x);\n  //   }\n  //   return result;\n  // }\n\n  det() {\n    let [ops, res] = this.rowReduce();\n    for (let i = 1; i <= res.rows; i++) {\n      if (res.getItem(i, i).isZero()) {\n        return new Real(0); // not invertible\n      }\n    }\n    let result = new Real(1);\n    for (let op of ops) {\n      if (op[0] === \"swap\") {\n        result = result.neg();\n      } else if (op[0] === \"mul\") {\n        result = result.mul(op[2].opposite());\n      }\n    }\n    return result;\n  }\n\n  adj() {\n    let result = Matrix.Zero(this.cols, this.rows);\n    for (let i = 1; i <= this.rows; i++) {\n      for (let j = 1; j <= this.cols; j++) {\n        let x = new Real(Math.pow(-1, j + i)).mul(this.minor(j, i).det());\n        result.setItem(i, j, x);\n      }\n    }\n    return result;\n  }\n\n  swapRowsInplace(i, j) {\n    /// R_i <-> R_j\n    for (let k = 1; k <= this.cols; k++) {\n      let temp = this.getItem(i, k);\n      this.setItem(i, k, this.getItem(j, k));\n      this.setItem(j, k, temp);\n    }\n  }\n\n  addRowInplace(i, j, x) {\n    /// R_i -> R_i + x*R_j\n    for (let k = 1; k <= this.cols; k++) {\n      this.setItem(i, k, this.getItem(i, k).add(x.mul(this.getItem(j, k))));\n    }\n  }\n\n  multiplyRowInplace(i, x) {\n    /// R_i -> x*R_i\n    for (let k = 1; k <= this.cols; k++) {\n      this.setItem(i, k, x.mul(this.getItem(i, k)));\n    }\n  }\n\n  applyRowOperation(name, ...args) {\n    if (name === \"swap\") {\n      this.swapRowsInplace(...args);\n    } else if (name === \"add\") {\n      this.addRowInplace(...args);\n    } else if (name === \"mul\") {\n      this.multiplyRowInplace(...args);\n    }\n  }\n\n  rowReduce() {\n    // Move zero rows to the bottom\n    let res = this.clone();\n    let actions = [];\n    let lastZeroRow = res.rows + 1;\n    for (let i = 1; i <= (lastZeroRow - 1); i++) {\n      let good = true;\n      for (let k = 1; k <= res.cols; k++) {\n        if (!res.getItem(i, k).isZero()) {\n          good = false;\n          break;\n        }\n      }\n      if (good) {\n        lastZeroRow -= 1;\n        res.swapRowsInplace(i, lastZeroRow);\n        actions.push([\"swap\", i, lastZeroRow]);\n      }\n    }\n    \n    let i = 1;\n    for (let j = 1; j <= res.cols; j++) {\n      // Find the first row with this coefficient\n      let r, found = false;\n      for (r = i; r <= res.rows; r++) {\n        if (!res.getItem(r, j).isZero()) {\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        if (r !== i) {\n          // Swap to get the coefficient on the right row\n          res.swapRowsInplace(r, i);\n          actions.push([\"swap\", r, i]);\n          r = i;\n        }\n        i += 1;\n        // Divide row to get it to be one\n        let rx = res.getItem(r, j);\n        if (!rx.isOne() && !rx.isZero()) {\n          let x = rx.opposite();\n          res.multiplyRowInplace(r, x);\n          actions.push([\"mul\", r, x]);\n        }\n        // Remove row from all others to cancel the coefficient\n        for (let k = 1; k <= res.rows; k++) {\n          if (k !== r && !res.getItem(k, j).isZero()) {\n            let x = res.getItem(k, j).neg();\n            res.addRowInplace(k, r, x);\n            actions.push([\"add\", k, r, x]);\n          }\n        }\n      }\n    }\n    return [actions, res];\n  }\n\n  linearlyIndependentRows() {\n    const [ops] = this.rowReduce();\n    // Apply ops but not swaps\n    const res = this.clone();\n    let swaps = [0]; // Current swap order\n    for (let i = 1; i <= this.cols; i++) {\n      swaps.push(i);\n    }\n    for (let op of ops) {\n      if (op[0] === \"mul\") {\n        res.applyRowOperation(\"mul\", swaps[op[1]], op[2]);\n      } else if (op[0] === \"add\") {\n        res.applyRowOperation(\"add\", swaps[op[1]], swaps[op[2]], op[3]);\n      } else if (op[0] === \"swap\") {\n        let temp = swaps[op[1]];\n        swaps[op[1]] = swaps[op[2]];\n        swaps[op[2]] = temp;\n      }\n    }\n    // Remove all zero rows\n    let mat = [];\n    let matRows = 0;\n    for (let i = 1; i <= res.rows; i++) {\n      let row = [];\n      let isZeroRow = true;\n      for (let j = 1; j <= res.cols; j++) {\n        if (!res.getItem(i, j).isZero()) {\n          isZeroRow = false;\n        }\n        row.push(this.getItem(i, j));\n      }\n      if (!isZeroRow) {\n        matRows += 1;\n        mat = mat.concat(row);\n      }\n    }\n    return new Matrix(mat, this.cols, matRows).transpose();\n  }\n  \n  transpose() {\n    let result = Matrix.Zero(this.cols, this.rows);\n    for (let i = 1; i <= this.cols; i++) {\n      for (let j = 1; j <= this.rows; j++) {\n        result.setItem(i, j, this.getItem(j, i));\n      }\n    }\n    return result;\n  }\n\n  inverse() {\n    if (this.rows !== this.cols) {\n      return;\n    }\n    const n = this.rows;\n    let [ops, res] = this.rowReduce();\n    for (let i = 1; i <= n; i++) {\n      if (!res.getItem(i, i).isOne()) {\n        return;\n      }\n    }\n    // Do ops on res, in the opposite order\n    for (let op of ops) {\n      res.applyRowOperation(...op);\n    }\n    return res;\n  }\n\n  clone() {\n    return new Matrix(this.mat.slice(), this.rows, this.cols);\n  }\n\n  static Identity(n, zero, one) {\n    let mat = [];\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < n; j++) {\n        mat.push(j === i ? (one || new Real(1)) : (zero || new Real(0)));\n      }\n    }\n    return new Matrix(mat, n, n);\n  }\n\n  static Zero(m, n, zero) {\n    let mat = new Array(m * n).fill(zero || new Real(0));\n    return new Matrix(mat, m, n)\n  }\n}\n\n/*\nlet M = Matrix.Zero(3, 3, new Real(0));\nM.setItem(1, 1, new Real(3));\nM.setItem(3, 2, new Real(5));\nM.setItem(2, 2, new Real(20));\nM.setItem(2, 3, new Real(4));\nM.setItem(3, 3, new Real(1));\nconsole.log(M.toString());\nconsole.log(\"---\");\nconsole.log(M.linearlyIndependentRows().toString());*/\n","import styles from \"./MatrixComponent.module.css\";\nimport { Matrix, Real } from \"./matrix.js\";\n\nfunction rangeInclusive(i, j) {\n  let result = [];\n  for (let x = i; x <= j; x++) {\n    result.push(x);\n  }\n  return result;\n}\n\nexport default function MatrixComponent({ matrix: M, editable, onChange }) {\n  function changeCell(i, j, event) {\n    let x = parseInt(event.target.value);\n    let nextM = M.clone();\n    if (isNaN(x)) {\n      nextM.setItem(i, j, new Real(0));\n    } else {\n      nextM.setItem(i, j, new Real(x));\n    }\n    onChange(nextM);\n  }\n\n  function changeDim(n, m) {\n    let nextM = Matrix.Zero(n, m);\n    for (let i = 1; i <= M.rows; i++) {\n      for (let j = 1; j <= M.cols; j++) {\n        nextM.setItem(i, j, M.getItem(i, j))\n      }\n    }\n    onChange(nextM);\n  }\n\n  let table = (\n    <table>\n      <tbody>\n        {\n          rangeInclusive(1, M.rows).map(i => (\n            <tr key={i}>\n              {\n                rangeInclusive(1, M.cols).map(j => {\n                  let x = M.getItem(i, j).toString();\n                  let el = editable ?\n                    (<input\n                      style={{width: x.length + \"ch\"}}\n                      onChange={changeCell.bind(null, i, j)}\n                      value={x} />) :\n                    (<span>{x}</span>);\n                  return (\n                    <td key={i.toString() + \",\" + j.toString()}>\n                      {el}\n                    </td>\n                  )\n                })\n              }\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n\n  return (\n    <div className={styles.MatrixComponent}>\n      <div className={styles.leftParentheses}></div>\n      { editable ? (\n      <div className={styles.buttonContainer}>\n        {table}\n        <button className={styles.colAdd} onClick={() => changeDim(M.rows, M.cols + 1)}>+</button>\n        <button className={styles.colSub} onClick={() => changeDim(M.rows, M.cols - 1)}>-</button>\n        <button className={styles.rowAdd} onClick={() => changeDim(M.rows + 1, M.cols)}>+</button>\n        <button className={styles.rowSub} onClick={() => changeDim(M.rows - 1, M.cols)}>-</button>\n        <button className={styles.rowColAdd} onClick={() => changeDim(M.rows + 1, M.cols + 1)}>+</button>\n        <button className={styles.rowColSub} onClick={() => changeDim(M.rows - 1, M.cols - 1)}>-</button>\n      </div>\n        )\n        : table}\n     <div className={styles.rightParentheses}></div>\n    </div>\n  );\n}\n","import MatrixComponent from \"./MatrixComponent.jsx\";\nimport { Matrix, Real } from \"./matrix.js\";\nimport { useState } from \"react\";\nimport styles from \"./App.module.css\"\n\nfunction App() {\n  let [M1, setM1] = useState(Matrix.Zero(3, 3, new Real(0)));\n  let [M2, setM2] = useState(Matrix.Zero(3, 3, new Real(0)));\n  let [result, setResult] = useState(undefined);\n\n  return (\n    <div className=\"App\">\n      <h1 className={styles.title}>Misha's Matrix Calculator</h1>\n      <div className={styles.twoMatrices}>\n        <div className={styles.leftMatrix}>\n          <MatrixComponent\n            matrix={M1}\n            editable={true}\n            onChange={m => {\n              setM1(m);\n            }}\n          />\n        </div>\n        <div className={styles.twoMatricesOperators}>\n          <button onClick={() => { let temp = M1; setM1(M2); setM2(temp); }}>Swap A, B</button>\n          { M1.cols === M2.rows ? (\n            <button onClick={() => setResult(M1.mul(M2))}>A ⨉ B</button>\n          ) : null}\n          { M1.rows === M2.rows && M1.cols === M2.cols ? (\n            <button onClick={() => setResult(M1.add(M2))}>A + B</button>\n          ) : null}\n          <button onClick={() => setResult(M1.transpose())}>A transpose</button>\n          { M1.rows === M1.cols ? (\n            <div className={styles.twoMatricesOperators}>\n              <p><b>Square Matrix Operations</b></p>\n              <button onClick={() => setResult(M1.inverse())}>Inverse A</button>\n              <button onClick={() => setResult(new Matrix([M1.det()], 1, 1))}>det(A)</button>\n              <button onClick={() => setResult(M1.adj())}>adj(A)</button>\n            </div>\n            ) : null}\n        </div>\n        <div className={styles.rightMatrix}>\n          <MatrixComponent\n            matrix={M2}\n            editable={true}\n            onChange={m => {\n              setM2(m);\n            }}\n          />\n        </div>\n      </div>\n      <h1>Result:</h1>\n      { result ? (\n        <div>\n          <MatrixComponent\n            matrix={result}\n          />\n          <br /><br />\n          <button onClick={() => setM1(result)}>Save as A</button>\n          <button onClick={() => setM2(result)}>Save as B</button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2sKht\",\"twoMatrices\":\"App_twoMatrices__37cNF\",\"twoMatricesOperators\":\"App_twoMatricesOperators__1vnmb\",\"leftMatrix\":\"App_leftMatrix__2m8Hb\",\"rightMatrix\":\"App_rightMatrix__1xT53\"};"],"sourceRoot":""}